@page "/GamesList"

@using MiniatureGolf.Models
@using MiniatureGolf.Services

@inherits MiniatureGolf.Pages.GamesListModel

<h1>Games</h1>

<div style="position: relative;">
    <div class="c-flexContainer">
        <TelerikButton Class="c-flexItem c-flexItemFirst" @OnClick="@(() => { this.SelectedDateFilter = DateFilter.Day; this.LoadGames(); })" Primary="@(this.SelectedDateFilter == DateFilter.Day ? true : false)">day</TelerikButton>
        <TelerikButton Class="c-flexItem" @OnClick="@(() => { this.SelectedDateFilter = DateFilter.Week; this.LoadGames(); })" Primary="@(this.SelectedDateFilter == DateFilter.Week ? true : false)">week</TelerikButton>
        <TelerikButton Class="c-flexItem" @OnClick="@(() => { this.SelectedDateFilter = DateFilter.Month; this.LoadGames(); })" Primary="@(this.SelectedDateFilter == DateFilter.Month ? true : false)">month</TelerikButton>
        <TelerikButton Class="c-flexItem" @OnClick="@(() => { this.SelectedDateFilter = DateFilter.Quarter; this.LoadGames(); })" Primary="@(this.SelectedDateFilter == DateFilter.Quarter ? true : false)">quarter</TelerikButton>
        <TelerikButton Class="c-flexItem c-flexItemLast" @OnClick="@(() => { this.SelectedDateFilter = DateFilter.Year; this.LoadGames(); })" Primary="@(this.SelectedDateFilter == DateFilter.Year ? true : false)">year</TelerikButton>
    </div>

    <div>
        <TelerikDropDownList Data="@this.FilterStates" @bind-value="@this.SelectedFilterStateId" ValueField="@nameof(FilterState.Id)" TextField="@nameof(FilterState.Name)" Height="38px" Width="110px" PopupHeight="Auto" TItem="@FilterState" TValue="@int" />
        <TelerikTextBox Label="search for player" @bind-value="@this.PlayerFilterInput" />

        <span class="btn-group btn-group-toggle" data-toggle="buttons">
            <label class="btn btn-info @(this.RankingDisplayMode == RankingDisplayMode.Average ? "active" : "")">
                <input type="radio" name="options" id="option1" autocomplete="off" @onclick="@(() => this.RankingDisplayMode = RankingDisplayMode.Average)" /> Average
            </label>
            <label class="btn btn-info @(this.RankingDisplayMode == RankingDisplayMode.Sum ? "active" : "")">
                <input type="radio" name="options" id="option2" autocomplete="off" @onclick="@(() => this.RankingDisplayMode = RankingDisplayMode.Sum)" /> Sum
            </label>
        </span>
    </div>

    <div class="fullViewHeightOnMobileDevice" style="margin-top: 10px; min-height: 235px; height: calc(100vh - 250px);">
        <TelerikGrid Data=@this.CurrentGames Height="100%" Sortable="true">
            <TelerikGridColumns>
                <TelerikGridColumn Title="Status" Editable="false" Width="130px" Field="@nameof(LightweightGamestate.Status)">
                    <Template>
                        @if (context is LightweightGamestate gs)
                        {
                            <a class="btn @(this.GetButtonClassForState(gs))" href="@($"/MiniatureGolf/{gs.Game.GUID}/{(int)UserMode.SpectatorReadOnly}/0/{(int)this.RankingDisplayMode}")" role="button" style="width: 100%;">@(gs.StatusText)</a>
                        }
                    </Template>
                </TelerikGridColumn>

                <TelerikGridColumn Title="Time" Editable="false" Width="190px" Field="@nameof(LightweightGamestate.Time)" />

                <TelerikGridColumn Title="Players" Editable="false" Field="@(this.RankingDisplayMode switch { RankingDisplayMode.Average => nameof(LightweightGamestate.PlayersTextForAvgRanking), RankingDisplayMode.Sum => nameof(LightweightGamestate.PlayersTextForSumRanking), _ => throw new NotImplementedException()})" />
            </TelerikGridColumns>
        </TelerikGrid>
    </div>

    <div class="c-disableOverlay" data-lockPointer="@(this.IsGridBusyIndicatorOpactyAnimationTrigger ? "true" : "false")" style="visibility: @(this.IsGridBusyIndicatorVisible ? "visible" : "collapse");">
        <div class="c-disableOverlayOuterContainer">
            <div class="c-disableOverlayContainer" style="opacity: @(this.IsGridBusyIndicatorOpactyAnimationTrigger ? "1" : "0");">
                <div style="font-size: 60px;" class="c-animate-flicker">⏱</div>
                <div style="font-size: 1.5em; text-align: center;">loading...</div>
            </div>
        </div>
    </div>
</div>

<link href="/css/styles/GamesList.min.css" rel="stylesheet" />
                    